---
import type { ExperienceType } from '../types/schema';

interface Props {
  experience: ExperienceType;
  isLast: boolean;
  isFirst: boolean;
}

const { experience, isLast, isFirst } = Astro.props;

const { title, company, location, from, to, description } = experience;

const parsedFromDate = new Date(from).toLocaleDateString('en-gb', {
  year: 'numeric',
  month: 'long',
});
const parsedToDate = new Date(to).toLocaleDateString('en-gb', {
  year: 'numeric',
  month: 'long',
});
---

<li>
  <div class='relative pb-8'>
    {
      isLast ? null : (
        <span
          class='absolute left-2.5 top-5 -ml-px h-full w-0.5 bg-gray-200'
          aria-hidden='true'
        />
      )
    }
    <div class='relative flex items-start space-x-2'>
      <div class='relative'>
        <div
          class=`${isFirst ? "border-l-blue-500 animate-spin" : "border-blue-500"} border flex h-5 w-5 items-center justify-center rounded-full border-4 ring-8 mt-1 bg-white ring-slate-50`
        >
        </div>
      </div>
      <div class='min-w-0 flex-1'>
        <div class='mb-2 pl-4'>
          <p class='font-medium text-gray-900'>
            {title}
            {company ? `@ ${company}` : ''}{' '}
            {location ? `| ${location}` : ''}
          </p>
          {
            from && to ? (
              <p class='mt-1 text-xs text-gray-700 uppercase tracking-wide'>
                {parsedFromDate} - {parsedToDate}
              </p>
            ) : null
          }
        </div>
        <div class='mt-4 text-sm text-gray-500'>
          <ul class='space-y-2 pl-4'>
            {description.map((desc) => <li>{desc}</li>)}
          </ul>
        </div>
      </div>
    </div>
  </div>
</li>
